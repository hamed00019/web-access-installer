#!/bin/bash
# 🌐 Web Access Auto-Installer
# Quick install: curl -fsSL https://raw.githubusercontent.com/hamed00019/web-access-installer/main/install.sh | bash

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m'

echo -e "${CYAN}🌐 Web Access Auto-Installer by hamed00019${NC}"
echo -e "${CYAN}===========================================${NC}"

# Check if running as root
if [[ $EUID -ne 0 ]]; then
    echo -e "${RED}❌ This script must be run as root${NC}"
    echo "Please run: sudo bash install.sh"
    exit 1
fi

echo -e "${YELLOW}🌐 Configuring hosts file...${NC}"

# Backup existing hosts
cp /etc/hosts /etc/hosts.backup.$(date +%Y%m%d-%H%M%S)

# Remove old entries if exist
sed -i '/# Web Access Tool entries/,/# End Web Access Tool entries/d' /etc/hosts

# Add new entries
cat >> /etc/hosts << 'HOSTS_EOF'

# Web Access Tool entries - Auto-generated by hamed00019
# Google IPs for optimal access
172.217.16.110 googleapis.com
172.217.16.164 google.com
172.217.16.164 www.google.com
142.250.185.46 www.google.com
216.58.194.174 google.com
172.217.16.142 images.google.com
172.217.16.142 maps.google.com

# StackOverflow IPs
104.18.32.7 stackoverflow.com
104.18.33.7 stackoverflow.com
151.101.1.69 stackoverflow.com
151.101.65.69 stackoverflow.com

# GitHub IPs
140.82.114.4 github.com
140.82.112.3 github.com
185.199.108.133 raw.githubusercontent.com

# Additional useful sites
151.101.193.140 reddit.com
104.16.124.96 medium.com
# End Web Access Tool entries
HOSTS_EOF

echo -e "${YELLOW}🔧 Creating smart-curl tool...${NC}"
cat > /usr/local/bin/smart-curl << 'SMART_CURL_EOF'
#!/bin/bash
# Smart curl with optimal settings

URL="$1"
shift
OPTIONS="$@"

exec curl \
    --ipv4 \
    --max-time 10 \
    --connect-timeout 5 \
    --retry 2 \
    --retry-delay 3 \
    --user-agent "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36" \
    --header "Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8" \
    --header "Accept-Language: en-US,en;q=0.5" \
    --compressed \
    $OPTIONS \
    "$URL"
SMART_CURL_EOF
chmod +x /usr/local/bin/smart-curl

echo -e "${YELLOW}🔧 Creating web search tool...${NC}"
cat > /usr/local/bin/stable-web-search << 'SEARCH_EOF'
#!/bin/bash
# Stable web search with retry logic

USER_AGENT="Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36"

stable_curl() {
    local url="$1"
    local max_attempts=3
    local attempt=1

    while [ $attempt -le $max_attempts ]; do
        echo "🔄 Attempt $attempt/$max_attempts..." >&2
        
        local result=$(timeout 10 curl -4 -s --max-time 8 \
            -H "User-Agent: $USER_AGENT" \
            -H "Accept: text/html,application/xhtml+xml" \
            "$url" 2>/dev/null)

        if [ $? -eq 0 ] && [ -n "$result" ]; then
            echo "$result"
            return 0
        fi

        sleep 2
        ((attempt++))
    done
    
    echo "❌ Failed after $max_attempts attempts" >&2
    return 1
}

show_help() {
    echo "🌐 Stable Web Search Tool"
    echo "Usage: stable-web-search [command] [query]"
    echo ""
    echo "Commands:"
    echo "  simple, s       - Simple Google test"
    echo "  google, g       - Google Search"
    echo "  stackoverflow, so - StackOverflow"
    echo "  github, gh      - GitHub"
    echo ""
    echo "Examples:"
    echo "  stable-web-search simple"
    echo "  stable-web-search google 'linux commands'"
    echo "  stable-web-search so 'python error'"
}

case "$1" in
    "simple"|"s")
        echo "🔍 Simple Google Test:"
        stable_curl "http://www.google.com/" | head -5
        ;;
    "google"|"g")
        query="${*:2}"
        echo "🔍 Searching Google for: $query"
        stable_curl "http://www.google.com/search?q=${query// /+}" | \
            grep -i "title\|h3" | head -3
        ;;
    "stackoverflow"|"so")
        query="${*:2}"
        echo "📚 Searching StackOverflow for: $query"
        stable_curl "http://stackoverflow.com/search?q=${query// /+}" | \
            grep -i "question\|title" | head -3
        ;;
    "github"|"gh")
        query="${*:2}"
        echo "🐙 Searching GitHub for: $query"
        stable_curl "http://github.com/search?q=${query// /+}" | \
            grep -i "repo" | head -3
        ;;
    *)
        show_help
        ;;
esac
SEARCH_EOF
chmod +x /usr/local/bin/stable-web-search

echo -e "${YELLOW}🔧 Creating ultimate web command...${NC}"
cat > /usr/local/bin/web << 'WEB_EOF'
#!/bin/bash
# Ultimate web access command

show_help() {
    echo "🌐 Ultimate Web Access Tool by hamed00019"
    echo "========================================"
    echo "Usage: web [command] [options]"
    echo ""
    echo "Commands:"
    echo "  test, t          - Test all connections"
    echo "  google, g <query> - Search Google"
    echo "  stack, s <query>  - Search StackOverflow"
    echo "  github, gh <query> - Search GitHub"
    echo "  simple           - Simple Google test"
    echo "  status           - Show current status"
    echo "  help, h          - Show this help"
    echo ""
    echo "Examples:"
    echo "  web test"
    echo "  web simple"
    echo "  web google 'linux commands'"
    echo "  web stack 'python error'"
    echo "  web status"
}

case "$1" in
    "test"|"t")
        echo "🔍 Testing all web connections..."
        echo ""
        echo "Google Test:"
        stable-web-search simple
        echo ""
        echo "Status:"
        web status
        ;;
    "simple")
        stable-web-search simple
        ;;
    "google"|"g")
        query="${*:2}"
        if [ -z "$query" ]; then
            echo "❌ Please provide a search query"
            echo "Usage: web google 'your query'"
        else
            stable-web-search google "$query"
        fi
        ;;
    "stack"|"s")
        query="${*:2}"
        if [ -z "$query" ]; then
            echo "❌ Please provide a search query"
            echo "Usage: web stack 'your query'"
        else
            stable-web-search stackoverflow "$query"
        fi
        ;;
    "github"|"gh")
        query="${*:2}"
        if [ -z "$query" ]; then
            echo "❌ Please provide a search query"
            echo "Usage: web github 'your query'"
        else
            stable-web-search github "$query"
        fi
        ;;
    "status")
        echo "📊 Web Access Status:"
        echo "===================="
        echo "Google: $(smart-curl "http://www.google.com/" -I -s 2>/dev/null | head -1 | awk '{print $2}' || echo "Failed")"
        echo "StackOverflow: $(smart-curl "http://stackoverflow.com/" -I -s 2>/dev/null | head -1 | awk '{print $2}' || echo "Failed")"
        echo "GitHub: $(smart-curl "http://github.com/" -I -s 2>/dev/null | head -1 | awk '{print $2}' || echo "Failed")"
        echo ""
        echo "Tools: smart-curl, stable-web-search, web"
        echo "Hosts entries: $(grep -c -E "(google|stackoverflow|github)" /etc/hosts) total"
        ;;
    "help"|"h"|"")
        show_help
        ;;
    *)
        echo "❌ Unknown command: $1"
        echo ""
        show_help
        ;;
esac
WEB_EOF
chmod +x /usr/local/bin/web

# TCP optimization
echo -e "${YELLOW}⚡ Optimizing TCP settings...${NC}"
cat >> /etc/sysctl.conf << 'SYSCTL_EOF'

# Web Access TCP optimizations by hamed00019
net.ipv4.tcp_keepalive_time = 600
net.ipv4.tcp_keepalive_intvl = 60
net.ipv4.tcp_keepalive_probes = 3
net.ipv4.tcp_fin_timeout = 30
# End Web Access TCP optimizations
SYSCTL_EOF
sysctl -p >/dev/null 2>&1

echo -e "${GREEN}✅ Web Access tools installed successfully!${NC}"
echo ""
echo -e "${CYAN}🚀 Quick Start:${NC}"
echo "  web simple      # Simple test"
echo "  web test        # Full test"
echo "  web status      # Show status"
echo "  web help        # Show all commands"
echo ""
echo -e "${GREEN}🎉 Installation complete! Enjoy your web access!${NC}"
echo -e "${BLUE}💡 Created by hamed00019 - github.com/hamed00019/web-access-installer${NC}"
